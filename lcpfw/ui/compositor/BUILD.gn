# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/ui.gni")
import("//testing/test.gni")

component("compositor") {
  sources = [
    "animation_throughput_reporter.cc",
    "animation_throughput_reporter.h",
    "callback_layer_animation_observer.cc",
    "callback_layer_animation_observer.h",
    "canvas_painter.cc",
    "canvas_painter.h",
    "clip_recorder.cc",
    "clip_recorder.h",
    "closure_animation_observer.cc",
    "closure_animation_observer.h",
    "compositor.cc",
    "compositor.h",
    "compositor_animation_observer.h",
    "compositor_export.h",
    "compositor_lock.cc",
    "compositor_lock.h",
    "compositor_observer.h",
    "compositor_switches.cc",
    "compositor_switches.h",
    "debug_utils.cc",
    "debug_utils.h",
    "float_animation_curve_adapter.cc",
    "float_animation_curve_adapter.h",
    "layer.cc",
    "layer.h",
    "layer_animation_delegate.h",
    "layer_animation_element.cc",
    "layer_animation_element.h",
    "layer_animation_observer.cc",
    "layer_animation_observer.h",
    "layer_animation_sequence.cc",
    "layer_animation_sequence.h",
    "layer_animator.cc",
    "layer_animator.h",
    "layer_animator_collection.cc",
    "layer_animator_collection.h",
    "layer_delegate.cc",
    "layer_delegate.h",
    "layer_observer.h",
    "layer_owner.cc",
    "layer_owner.h",
    "layer_threaded_animation_delegate.h",
    "layer_tree_owner.cc",
    "layer_tree_owner.h",
    "layer_type.cc",
    "layer_type.h",
    "overscroll/scroll_input_handler.cc",
    "overscroll/scroll_input_handler.h",
    "paint_cache.cc",
    "paint_cache.h",
    "paint_context.cc",
    "paint_context.h",
    "paint_recorder.cc",
    "paint_recorder.h",
    "property_change_reason.h",
    "scoped_animation_duration_scale_mode.cc",
    "scoped_animation_duration_scale_mode.h",
    "scoped_layer_animation_settings.cc",
    "scoped_layer_animation_settings.h",
    "throughput_tracker.cc",
    "throughput_tracker.h",
    "throughput_tracker_host.h",
    "total_animation_throughput_reporter.cc",
    "total_animation_throughput_reporter.h",
    "transform_animation_curve_adapter.cc",
    "transform_animation_curve_adapter.h",
    "transform_recorder.cc",
    "transform_recorder.h",
  ]

  if (is_mac) {
    sources += [
      "recyclable_compositor_mac.cc",
      "recyclable_compositor_mac.h",
    ]
  }

  defines = [ "COMPOSITOR_IMPLEMENTATION" ]

  public_deps = [ "//cc" ]
  deps = [
    "//base",
    "//base/third_party/dynamic_annotations",
    "//build:chromeos_buildflags",
    "//cc/animation",
    "//cc/paint",
    "//components/viz/host",
    "//gpu/command_buffer/common",
    "//skia",
    "//ui/base",
    "//ui/display",
    "//ui/events",
    "//ui/gfx",
    "//ui/gfx/animation",
    "//ui/gfx/animation/keyframe",
    "//ui/gfx/geometry",
    "//ui/gl",
  ]

  if (is_mac) {
    deps += [ "//ui/accelerated_widget_mac" ]
  }

  if (is_win && use_aura) {
    # TODO(sky): before we make this real need to remove
    # IDR_BITMAP_BRUSH_IMAGE.
    deps += [ "//ui/resources" ]
  }
}
